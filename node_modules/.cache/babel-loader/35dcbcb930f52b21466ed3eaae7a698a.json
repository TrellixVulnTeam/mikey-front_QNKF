{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL } from './types';\nexport const checkAuthenticated = () => async dispatch => {\n  if (localStorage.getItem('access')) {} else {\n    dispatch({\n      type: AUTHENTICATED_FAIL\n    });\n  }\n};\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/Michael/Documents/programming/React/fresherstrip/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","checkAuthenticated","dispatch","localStorage","getItem","type","AUTHENTICATED_FAIL","load_user","config","headers","res","get","process","env","REACT_APP_API_URL","payload","data","err","login","email","password","body","JSON","stringify","post","logout","LOGOUT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,UAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,QAKO,SALP;AAOA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACtD,MAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,EAAkC,CAEjC,CAFD,MAEO;AACHF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEC;AADD,KAAD,CAAR;AAGH;AACJ,CARM;AAUP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAML,QAAN,IAAkB;AAC7C,MAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAmC;AAC/B,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,OAAMN,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAFlD;AAGL,kBAAU;AAHL;AADE,KAAf;;AAQA,QAAG;AACC,YAAMM,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAA3C,EAA6DN,MAA7D,CAAlB;AAEAN,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEN,mBADD;AAELgB,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH,KAPD,CAOC,OAAMC,GAAN,EAAU;AACPf,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEL;AADD,OAAD,CAAR;AAGH;AACJ,GArBD,MAsBI;AACAE,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL;AADD,KAAD,CAAR;AAGH;AACJ,CA5BM;AA8BP,OAAO,MAAMkB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMlB,QAAN,IAAkB;AACxD,QAAMM,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMY,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEJ,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAEA,MAAG;AACC,UAAMV,GAAG,GAAG,MAAMd,KAAK,CAAC4B,IAAN,CAAY,GAAEZ,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mBAA5C,EAAgEO,IAAhE,EAAsEb,MAAtE,CAAlB;AAEAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,aADD;AAELkB,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,KAAD,CAAR;AAKAd,IAAAA,QAAQ,CAACK,SAAS,EAAV,CAAR;AACH,GATD,CAUA,OAAMU,GAAN,EAAU;AACNf,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGH;AACJ,CAxBM;AA0BP,OAAO,MAAM2B,MAAM,GAAG,MAAMvB,QAAQ,IAAI;AACpCA,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEqB;AADD,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import axios from 'axios';\r\nimport{\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if(localStorage.getItem('access')){\r\n        \r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try{\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n            \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }catch(err){\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password});\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n        dispatch(load_user());\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}