{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, PASSWORD_RESET_FAIL, PASSWORD_RESET_SUCCESS, PASSWORD_RESET_CONFIRM_FAIL, PASSWORD_RESET_CONFIRM_SUCCESS, SIGNUP_SUCCESS, SIGNUP_FAIL, ACTIVATION_SUCCESS, ACTIVATION_FAIL, LOGOUT } from '../actions/types';\nconst initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return { ...state,\n        isAuthenticated: true\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access);\n      return { ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh\n      };\n\n    case SIGNUP_SUCCESS:\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    case USER_LOADED_SUCCESS:\n      return { ...state,\n        user: payload\n      };\n\n    case USER_LOADED_FAIL:\n      return { ...state,\n        user: null\n      };\n\n    case AUTHENTICATED_FAIL:\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n      return { ...state,\n        isAuthenticated: false,\n        access: null,\n        refresh: null,\n        user: null\n      };\n\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/Michael/Documents/programming/React/fresherstrip/frontend/src/reducers/auth.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","LOGOUT","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SACIA,aADJ,EAEIC,UAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,EAOIC,mBAPJ,EAQIC,sBARJ,EASIC,2BATJ,EAUIC,8BAVJ,EAWIC,cAXJ,EAYIC,WAZJ,EAaIC,kBAbJ,EAcIC,eAdJ,EAeIC,MAfJ,QAgBO,kBAhBP;AAkBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADS;AAEjBC,EAAAA,OAAO,EAAEF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFQ;AAGjBE,EAAAA,eAAe,EAAE,IAHA;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGP,YAAjB,EAA+BQ,MAA/B,EAAsC;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAOC,IAAP;AACI,SAAKpB,qBAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHF,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAIJ,SAAKpB,aAAL;AACIiB,MAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BD,OAAO,CAACT,MAAvC;AACA,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,eAAe,EAAE,IAFd;AAGHJ,QAAAA,MAAM,EAAES,OAAO,CAACT,MAHb;AAIHG,QAAAA,OAAO,EAAEM,OAAO,CAACN;AAJd,OAAP;;AAMJ,SAAKT,cAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHF,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAIJ,SAAKlB,mBAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHD,QAAAA,IAAI,EAAEI;AAFH,OAAP;;AAIJ,SAAKtB,gBAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHD,QAAAA,IAAI,EAAE;AAFH,OAAP;;AAIJ,SAAKhB,kBAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHF,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAKJ,SAAKnB,UAAL;AACA,SAAKU,WAAL;AACA,SAAKG,MAAL;AACIG,MAAAA,YAAY,CAACU,UAAb,CAAwB,QAAxB;AACAV,MAAAA,YAAY,CAACU,UAAb,CAAwB,SAAxB;AACA,aAAM,EACF,GAAGL,KADD;AAEFF,QAAAA,eAAe,EAAE,KAFf;AAGFJ,QAAAA,MAAM,EAAE,IAHN;AAIFG,QAAAA,OAAO,EAAE,IAJP;AAKFE,QAAAA,IAAI,EAAE;AALJ,OAAN;;AAQJ,SAAKf,mBAAL;AACA,SAAKC,sBAAL;AACA,SAAKC,2BAAL;AACA,SAAKC,8BAAL;AACA,SAAKG,kBAAL;AACA,SAAKC,eAAL;AACI,aAAM,EACF,GAAGS;AADD,OAAN;;AAIJ;AACI,aAAOA,KAAP;AA3DR;AA6DH;AAAA","sourcesContent":["import{\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch(type){\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false,\r\n                access: null,\r\n                refresh: null,\r\n                user: null\r\n            }\r\n    \r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return{\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}