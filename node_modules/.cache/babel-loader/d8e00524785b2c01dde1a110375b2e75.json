{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL } from '../actions/types';\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Michael/Documents/programming/React/fresherstrip/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","load_user","dispatch","localStorage","getItem","config","headers","res","get","process","env","REACT_APP_API_URL","type","payload","data","err","login","email","password","body","JSON","stringify","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,UAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,QAKO,kBALP;AAOA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAmC;AAC/B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAFlD;AAGL,kBAAU;AAHL;AADE,KAAf;;AAQA,QAAG;AACC,YAAMG,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAA3C,EAA6DN,MAA7D,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEb,mBADD;AAELc,QAAAA,OAAO,EAAEN,GAAG,CAACO;AAFR,OAAD,CAAR;AAIH,KAPD,CAOC,OAAMC,GAAN,EAAU;AACPb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEZ;AADD,OAAD,CAAR;AAGH;AACJ,GArBD,MAsBI;AACAE,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH;AACJ,CA5BM;AA8BP,OAAO,MAAMgB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMhB,QAAN,IAAkB;AACxD,QAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMa,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEJ,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAEA,MAAG;AACC,UAAMX,GAAG,GAAG,MAAMX,KAAK,CAAC0B,IAAN,CAAY,GAAEb,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mBAA5C,EAAgEQ,IAAhE,EAAsEd,MAAtE,CAAlB;AAEAH,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEf,aADD;AAELgB,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFR,KAAD,CAAR;AAKAZ,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACH,GATD,CAUA,OAAMc,GAAN,EAAU;AACNb,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH;AACJ,CAxBM","sourcesContent":["import axios from 'axios';\r\nimport{\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try{\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n            \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }catch(err){\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password});\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        \r\n        dispatch(load_user());\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}